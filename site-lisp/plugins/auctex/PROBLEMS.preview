Known problems with preview-latex
*********************************

A number of issues are known concerning the interoperation with various
other software.  Some of the known problems can be solved by moving to
newer versions of the problematic software or by simple patches.

   If you find something not mentioned here, please send a bug report
using 'M-x preview-report-bug <RET>', which will fill in a lot of
information interesting to us and send it to the <bug-auctex@gnu.org>
list.  Please use the bug reporting commands if at all possible.

1 Font problems with Dvips
**************************

Some fonts have been reported to produce wrong characters with
preview-latex.  preview-latex calls Dvips by default with the option
'-Pwww' in order to get scalable fonts for nice results.  If you are
using antialiasing, however, the results might be sufficiently nice with
bitmapped fonts, anyway.  You might try '-Ppdf' for another stab at
scalable fonts, or other printer definitions.  Use

     'M-x customize-variable <RET> preview-fast-dvips-command <RET>'
and
     'M-x customize-variable <RET> preview-dvips-command <RET>'
in order to customize this.

   One particular problem is that several printer setup files (typically
in a file called '/usr/share/texmf/dvips/config/config.pdf' if you are
using the '-Ppdf' switch) contain the 'G' option for 'character
shifting'.  This option will result in 'fi' being rendered as '£'
(British Pounds sign) in several fonts, unless your version of Dvips has
a long-standing bug in its implementation fixed (only very recent
versions of Dvips have).

2 Too small bounding boxes
**************************

The bounding box of a preview is determined by the LaTeX package using
the pure TeX bounding boxes.  If there is material extending outside of
the TeX box, that material will be missing from the preview image.  This
happens for the label-showing boxes from the 'showkeys' package.  This
particular problem can be circumvented by using the 'showlabels' option
of the preview package.

   In general, you should try to fix the problem in the TeX code, like
avoiding drawing outside of the picture with PSTricks.

   One possible remedy is to set 'preview-fast-conversion' to 'Off' (see
the manual).  The conversion will take more time, but will then use the
bounding boxes from EPS files generated by Dvips.

   Dvips generally does not miss things, but it does not understand
PostScript constructs like '\resizebox' or '\rotate' commands, so will
generate rather wrong boxes for those.  Dvips can be helped with the
'psfixbb' package option to preview (see the manual), which will tag the
corners of the included TeX box.  This will mostly be convenient for
_pure_ PostScript stuff like that created by PSTricks, which Dvips would
otherwise reserve no space for.

3 x-symbol interoperation
*************************

Thanks to the work of Christoph Wedler, starting with version
'4.0h/beta' of x-symbol, the line parsing of AUCTeX and preview-latex is
fully supported.  Earlier versions exhibit problems.  However, versions
before 4.2.2 will cause a drastic slowdown of preview-latex's parsing
pass, so we don't recommend to use versions earlier than that.

   If you wonder what x-symbol is, it is a package that transforms
various tokens and subscripts to a more readable form while editing and
offers a few input methods handy especially for dealing with math.  Take
a look at <http://x-symbol.sourceforge.net>.

   x-symbol versions up to 4.5.1-beta at least require an 8bit-clean TeX
implementation (meaning that its terminal output should not use
'^^'-started escape sequences) for cooperation with preview-latex.
Later versions may get along without it, like preview-latex does now.

   If you experience problems with 'circ.tex' in connection with both
x-symbol and Latin-1 characters, you may need to change your language
environment or, as a last resort, customize the variable
'LaTeX-command-style' by replacing the command 'latex' with 'latex
-translate-file=cp8bit'.

4 Middle-clicks paste instead of toggling
*****************************************

This is probably the fault of your favorite package.  'isearch.el' is
known to be affected while searches are in progress, but the code is
such a complicated mess that no patch is in sight.  Better just end the
search with '<RET>' before toggling and resume with 'C-s C-s' or similar
afterwards.  Since previews over the current match will auto-open,
anyway, this should not be much of a problem in practice.

5 No images are displayed with gs 9.27 and earlier
**************************************************

preview-latex tries to adjust the foreground and background colors of
generated images to those of Emacs.  Unfortunately, incompatible changes
introduced in Ghostscript 9.27 breaks the traditional method partially,
and preview-latex can display no images under certain circumstances.

   A new method implemented alternatively works only with Ghostscript >
9.27.  If you are using Ghostscript 9.27 or earlier, customize the
option 'preview-pdf-adjust-color-method'.

 -- User Option: preview-pdf-adjust-color-method
     Method to adjust colors of images generated from PDF.  It is not
     consulted when the LaTeX command produces DVI files.

     When the option is 't' (default), preview-latex adjusts the FG and
     BG colors of the generated images by the new method.  This method
     requires that Ghostscript has working 'DELAYBIND' feature, thus is
     invalid with gs 9.27 (and possibly < 9.27).

     When it is 'compatible', preview-latex uses traditional method.
     This option is provided for backward compatibility with older gs.
     See the below explanation for detail.

     When 'nil', no adjustment is done and "black on white" image is
     generated regardless of Emacs color.  This is provided for fallback
     for gs 9.27 users with customized foreground color.  See the below
     explanation for detail.

     When the LaTeX command produces PDF rather than DVI and Emacs has
     non-trivial foreground color, the traditional method ('compatible')
     makes gs >= 9.27 to stop with error.  Here, "non-trivial foreground
     color" includes customized themes.

     If you use such non-trivial foreground color and the version of
     Ghostscript equals to 9.27, you have two options:
       1. Choose the value 'compatible' and customize
          'preview-reference-face' to have default (black) foreground
          color.  This makes the generated image almost non-readable on
          dark background, so the next option would be your only choice
          in that case.
       2. Choose the value 'nil', which forces plain "black on white"
          appearance for the generated image.  You can at least read
          what are written in the image although they may not match with
          your Emacs color well.

     The default value used to be 'compatible' for short period before
     Ghostscript 9.50 was released but now is 't'.
